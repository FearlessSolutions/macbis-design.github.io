/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface BannerComponent {
        "bannerAction": string;
        "bannerDomain": 'gov' | 'mil';
        "bannerLang": 'english' | 'spanish';
        "bannerTitle": string;
    }
    interface ButtonComponent {
        "iconPosition": string;
        "label": string;
        "size": string;
        "state": string;
        "type": string;
    }
    interface DropdownButton {
        "buttonLabel": string;
        "theme": 'blue' | 'dark-blue';
    }
    interface HeaderComponent {
        "accountLabel": string;
        "accountStyle": 'detailed' | 'simplified-icon' | 'simplified-no-icon' | 'simplified-no-label';
        "accountTheme": 'blue' | 'dark';
        "headerLogo": string;
        "headerLogoTheme": 'white' | 'blue' | 'dark';
        "navInlinePosition": 'right' | 'left';
        "navLocation": 'below' | 'inline' | 'none';
        "navTheme": 'white' | 'blue' | 'dark';
        "searchTextTheme": 'white' | 'blue' | 'dark';
        "searchTheme": 'white' | 'blue' | 'dark';
        "seperatorSize": 'small' | 'large' | 'none';
        "seperatorTheme": 'white' | 'blue';
        "showSearch": boolean;
        "size": 'slim' | 'normal';
        "theme": 'white' | 'blue' | 'dark';
    }
    interface SectionComponent {
        "sectionButtonLabel": string;
    }
    interface TextInputComponent {
        "hint": string;
        "kind": 'default' | 'error' | 'success';
        "label": string;
        "placeholder": string;
        "required": boolean;
        "type": string;
    }
}
declare global {
    interface HTMLBannerComponentElement extends Components.BannerComponent, HTMLStencilElement {
    }
    var HTMLBannerComponentElement: {
        prototype: HTMLBannerComponentElement;
        new (): HTMLBannerComponentElement;
    };
    interface HTMLButtonComponentElement extends Components.ButtonComponent, HTMLStencilElement {
    }
    var HTMLButtonComponentElement: {
        prototype: HTMLButtonComponentElement;
        new (): HTMLButtonComponentElement;
    };
    interface HTMLDropdownButtonElement extends Components.DropdownButton, HTMLStencilElement {
    }
    var HTMLDropdownButtonElement: {
        prototype: HTMLDropdownButtonElement;
        new (): HTMLDropdownButtonElement;
    };
    interface HTMLHeaderComponentElement extends Components.HeaderComponent, HTMLStencilElement {
    }
    var HTMLHeaderComponentElement: {
        prototype: HTMLHeaderComponentElement;
        new (): HTMLHeaderComponentElement;
    };
    interface HTMLSectionComponentElement extends Components.SectionComponent, HTMLStencilElement {
    }
    var HTMLSectionComponentElement: {
        prototype: HTMLSectionComponentElement;
        new (): HTMLSectionComponentElement;
    };
    interface HTMLTextInputComponentElement extends Components.TextInputComponent, HTMLStencilElement {
    }
    var HTMLTextInputComponentElement: {
        prototype: HTMLTextInputComponentElement;
        new (): HTMLTextInputComponentElement;
    };
    interface HTMLElementTagNameMap {
        "banner-component": HTMLBannerComponentElement;
        "button-component": HTMLButtonComponentElement;
        "dropdown-button": HTMLDropdownButtonElement;
        "header-component": HTMLHeaderComponentElement;
        "section-component": HTMLSectionComponentElement;
        "text-input-component": HTMLTextInputComponentElement;
    }
}
declare namespace LocalJSX {
    interface BannerComponent {
        "bannerAction"?: string;
        "bannerDomain"?: 'gov' | 'mil';
        "bannerLang"?: 'english' | 'spanish';
        "bannerTitle"?: string;
    }
    interface ButtonComponent {
        "iconPosition"?: string;
        "label"?: string;
        "size"?: string;
        "state"?: string;
        "type"?: string;
    }
    interface DropdownButton {
        "buttonLabel"?: string;
        "theme"?: 'blue' | 'dark-blue';
    }
    interface HeaderComponent {
        "accountLabel"?: string;
        "accountStyle"?: 'detailed' | 'simplified-icon' | 'simplified-no-icon' | 'simplified-no-label';
        "accountTheme"?: 'blue' | 'dark';
        "headerLogo"?: string;
        "headerLogoTheme"?: 'white' | 'blue' | 'dark';
        "navInlinePosition"?: 'right' | 'left';
        "navLocation"?: 'below' | 'inline' | 'none';
        "navTheme"?: 'white' | 'blue' | 'dark';
        "searchTextTheme"?: 'white' | 'blue' | 'dark';
        "searchTheme"?: 'white' | 'blue' | 'dark';
        "seperatorSize"?: 'small' | 'large' | 'none';
        "seperatorTheme"?: 'white' | 'blue';
        "showSearch"?: boolean;
        "size"?: 'slim' | 'normal';
        "theme"?: 'white' | 'blue' | 'dark';
    }
    interface SectionComponent {
        "sectionButtonLabel"?: string;
    }
    interface TextInputComponent {
        "hint"?: string;
        "kind"?: 'default' | 'error' | 'success';
        "label"?: string;
        "placeholder"?: string;
        "required"?: boolean;
        "type"?: string;
    }
    interface IntrinsicElements {
        "banner-component": BannerComponent;
        "button-component": ButtonComponent;
        "dropdown-button": DropdownButton;
        "header-component": HeaderComponent;
        "section-component": SectionComponent;
        "text-input-component": TextInputComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "banner-component": LocalJSX.BannerComponent & JSXBase.HTMLAttributes<HTMLBannerComponentElement>;
            "button-component": LocalJSX.ButtonComponent & JSXBase.HTMLAttributes<HTMLButtonComponentElement>;
            "dropdown-button": LocalJSX.DropdownButton & JSXBase.HTMLAttributes<HTMLDropdownButtonElement>;
            "header-component": LocalJSX.HeaderComponent & JSXBase.HTMLAttributes<HTMLHeaderComponentElement>;
            "section-component": LocalJSX.SectionComponent & JSXBase.HTMLAttributes<HTMLSectionComponentElement>;
            "text-input-component": LocalJSX.TextInputComponent & JSXBase.HTMLAttributes<HTMLTextInputComponentElement>;
        }
    }
}
